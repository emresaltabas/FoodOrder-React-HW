{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\maxi-17\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const [formValidation, setFormValidation] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const emptyInput = item => item.trim().length === 0;\n  const validInput = item => item.trim().length === 5;\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const validName = !emptyInput(enteredName);\n    const validStreet = !emptyInput(enteredStreet);\n    const validCity = !emptyInput(enteredCity);\n    const validPostal = !validInput(enteredPostal);\n    setFormValidation({\n      name: validName,\n      street: validStreet,\n      postal: validPostal,\n      city: validCity\n    });\n    const isValidForm = validName && validCity && validPostal && validStreet;\n    if (!isValidForm) {\n      return;\n    }\n  };\n  const nameClass = `${classes.control} ${!formValidation.street ? \"\" : \"invalid\"}`;\n  const streetClass = `${classes.control} ${!formValidation.street ? \"\" : \"invalid\"}`;\n  const postalClass = `${classes.control} ${!formValidation.street ? \"\" : \"invalid\"}`;\n  const cityClass = `${classes.control} ${!formValidation.street ? \"\" : \"invalid\"}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), !formValidation.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"empty name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !formValidation.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"empty street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), formValidation.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"invalid or empty postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formValidation.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"empty city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"5P1yuy6DfU7hEWobUmN9Qs5L2yQ=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","Checkout","props","formValidation","setFormValidation","name","street","postal","city","nameInputRef","streetInputRef","postalInputRef","cityInputRef","emptyInput","item","trim","length","validInput","confirmHandler","event","preventDefault","enteredName","current","value","enteredStreet","enteredPostal","enteredCity","validName","validStreet","validCity","validPostal","isValidForm","nameClass","control","streetClass","postalClass","cityClass","form","actions","onCancel","submit"],"sources":["C:/Users/user/Desktop/maxi-17/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef,useState } from 'react';\r\nconst Checkout = (props) => {\r\n\r\n    const [formValidation, setFormValidation]=useState({\r\n        name:true,\r\n        street:true,\r\n        postal:true,\r\n        city:true\r\n    })\r\n    const nameInputRef=useRef()\r\n    const streetInputRef=useRef()\r\n    const postalInputRef=useRef()\r\n    const cityInputRef=useRef()\r\n    const emptyInput=(item)=>item.trim().length===0\r\n    const validInput=(item)=>item.trim().length===5\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName=nameInputRef.current.value\r\n    const enteredStreet=streetInputRef.current.value\r\n    const enteredPostal=postalInputRef.current.value\r\n    const enteredCity=cityInputRef.current.value\r\n    \r\n    const validName=!emptyInput(enteredName)\r\n    const validStreet=!emptyInput(enteredStreet)\r\n    const validCity=!emptyInput(enteredCity)\r\n    const validPostal=!validInput(enteredPostal)\r\n    setFormValidation({\r\n        name:validName,\r\n        street:validStreet,\r\n        postal:validPostal, \r\n        city:validCity})\r\n    const isValidForm=validName && validCity && validPostal && validStreet\r\n\r\n    if(!isValidForm){\r\n        return;\r\n    }\r\n\r\n  };\r\n  const nameClass= `${classes.control} ${!formValidation.street ? \"\" : \"invalid\" }`\r\n  const streetClass= `${classes.control} ${!formValidation.street ? \"\" : \"invalid\" }`\r\n  const postalClass= `${classes.control} ${!formValidation.street ? \"\" : \"invalid\" }`\r\n  const cityClass= `${classes.control} ${!formValidation.street ? \"\" : \"invalid\" }`\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameClass}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef} />\r\n        {!formValidation.name && <p>empty name</p> }\r\n      </div>\r\n      <div className={streetClass}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef}/>\r\n        {!formValidation.street && <p>empty street</p> }\r\n      </div>\r\n      <div className={postalClass}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalInputRef} />\r\n        {formValidation.postal && <p>invalid or empty postal</p> }\r\n      </div>\r\n      <div className={cityClass}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef} />\r\n        {!formValidation.city && <p>empty city</p> }\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}